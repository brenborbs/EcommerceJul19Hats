.collection-item {
  width: 22vw;
  display: flex;
  flex-direction: column;
  height: 350px;
  align-items: center;
  position: relative;

  .image {
    width: 100%;
    height: 95%;
    background-size: cover;
    background-position: center;
    margin-bottom: 5px;
  }
  // The style is breaking as the button no longer has custom-button css class tag. So the parent element of the button, collection-item, is not able to apply the css properties defined in collection-item.styles.scss for the custom-button. To fix the issue, one easy way would be to just rename .custom-button  to button  in the collection-item.styles.scss
  button {
    width: 80%;
    opacity: 0.7;
    position: absolute;
    top: 255px;
    display: none;
  }

  &:hover {
    .image {
      opacity: 0.8;
    }
    // The style is breaking as the button no longer has custom-button css class tag. So the parent element of the button, collection-item, is not able to apply the css properties defined in collection-item.styles.scss for the custom-button. To fix the issue, one easy way would be to just rename .custom-button  to button  in the collection-item.styles.scss
    button {
      opacity: 0.85;
      display: flex;
    }
  }

  .collection-footer {
    width: 100%;
    height: 5%;
    display: flex;
    justify-content: space-between;
    font-size: 18px;

    .name {
      width: 90%;
      margin-bottom: 15px;
    }

    .price {
      width: 10%;
    }
  }
}
